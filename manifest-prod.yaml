apiVersion: v1
kind: Namespace
metadata:
   name: production
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-app-deployment
  namespace: production
spec:
  replicas: 2  # Number of replicas for your deployment
  selector:
    matchLabels:
      app: demo-app
  template:
    metadata:
      labels:
        app: demo-app
    spec:
      containers:
      - name: demo-app
        image: us-central1-docker.pkg.dev/brian-dev-1222/container-registry/demo-app:latest  # Image name and tag for your application
        ports:
        - containerPort: 8080  # Port on which your application listens
        resources:
          requests:
            cpu: "500m"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
            scheme: HTTP
          periodSeconds: 20
          timeoutSeconds: 5 
          failureThreshold: 1
        readinessProbe:
          httpGet:
            httpGet:
            path: /actuator/health
            port: 8080
            scheme: HTTP
          periodSeconds: 10
          timeoutSeconds: 5 
          failureThreshold: 2
        startupProbe:
          tcpSocket:
           port: 8080
           periodSeconds: 10
           failureThreshold: 100

---
apiVersion: v1
kind: Service
metadata:
  name: demo-app-service
  namespace: production
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
spec:
  selector:
    app: demo-app
  ports:
    - protocol: TCP
      port: 80  # Port exposed by the service
      targetPort: 8080  # Port to which traffic will be forwarded
  type: LoadBalancer  # Type of service (e.g., LoadBalancer, NodePort)
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: demo-app-hpa
  namespace: production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: demo-app-deployment
  minReplicas: 2  # Minimum number of replicas
  maxReplicas: 3  # Maximum number of replicas
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: AverageValue
        averageValue: 300Mi
