on: workflow_call

inputs:
  github_token:
    required: true
  tf_working_dir:
    required: false
    default: .

runs:
  using: "composite"
  permissions:
    pull-requests: write
  working-directory: ${{ inputs.tf_working_dir }}
  steps:
    - uses: actions/checkout@v4
    - name: Download plan artifact
      uses: actions/download-artifact@v2
      with:
        name: Terraform Plan
        path: plan.json
    - uses: hashicorp/setup-terraform@v3
  
    - name: Terraform Init
      id: init
      run: terraform init
  
    - name: Terraform Apply
      id: apply
      run: terraform apply plan.json
      continue-on-error: true

    - uses: actions/github-script@v6
      env:
        APPLY: "terraform\n${{ steps.apply.outputs.stdout }}"
      with:
        github-token: ${{ inputs.github_token }}
        script: |
          // 1. Prepare format of the comment
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Apply üìñ\`${{ steps.apply.outcome }}\`
  
          <details><summary>Show Apply</summary>
  
          \`\`\`\n
          ${process.env.APPLY}
          \`\`\`
  
          </details>
  
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
          
