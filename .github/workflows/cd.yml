name: Demo CD Pipeline

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Demo CI Pipeline"]
    types:
      - completed

env:
  GCP_PROJECT_ID: brian-dev-1222
  GCP_REGION: us-central1
  K8S_CLUSTER: autopilot-cluster-1
  K8S_MANIFEST: manifest.yaml
  K8S_DEPLOYMENT_NAME: demo-app-deployment
  PIPELINE_SA: pipeline@brian-dev-1222.iam.gserviceaccount.com
  WORKLOAD_IDENTITY_PROVIDER: projects/876147542335/locations/global/workloadIdentityPools/github-brian1222/providers/github-automation


permissions:
  contents: 'read'
  id-token: 'write'
  
jobs:
  deploy_to_dev:
    name: Deploy to Dev
    runs-on: ubuntu-latest
    outputs:
      app_url: ${{ steps.deploy-dev.outputs.app_url }}
    steps:
      - uses: actions/checkout@v4
      - id: deploy-dev
        uses: ./.github/actions/k8s-apply
        with:
          service_account: ${{ env.PIPELINE_SA }}
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          gcp_project_id: ${{ env.GCP_PROJECT_ID }}
          gcp_region: ${{ env.GCP_REGION }}
          cluster_name: ${{ env.K8S_CLUSTER }}
          cluster_namespace: development
          k8s_manifest: ${{ env.K8S_MANIFEST }}
          deployment_name: ${{ env.K8S_DEPLOYMENT_NAME }}

  smoke_dev:
    name: Smoke Test Dev
    runs-on: ubuntu-latest
    needs: deploy_to_dev
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/smoke-test
        with: 
          application_url: ${{ needs.deploy_to_dev.outputs.app_url }}

  rollback_dev:
    name: Rollback Dev
    runs-on: ubuntu-latest
    needs: smoke_dev
    if: ${{ always() && contains(needs.*.result, 'failure') }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/k8s-undo-deployment
        with: 
          service_account: ${{ env.PIPELINE_SA }}
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          gcp_project_id: ${{ env.GCP_PROJECT_ID }}
          gcp_region: ${{ env.GCP_REGION }}
          cluster_name: ${{ env.K8S_CLUSTER }}
          cluster_namespace: development
          deployment_name: ${{ env.K8S_DEPLOYMENT_NAME }}

  deploy_to_prod:
    name: Deploy to Prod
    runs-on: ubuntu-latest
    needs: smoke_dev
    outputs:
      app_url: ${{ steps.deploy-prod.outputs.app_url }}
    steps:
      - uses: actions/checkout@v4
      - id: deploy-prod
        uses: ./.github/actions/k8s-apply
        with:
          service_account: ${{ env.PIPELINE_SA }}
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          gcp_project_id: ${{ env.GCP_PROJECT_ID }}
          gcp_region: ${{ env.GCP_REGION }}
          cluster_name: ${{ env.K8S_CLUSTER }}
          cluster_namespace: production
          k8s_manifest: ${{ env.K8S_MANIFEST }}
          deployment_name: ${{ env.K8S_DEPLOYMENT_NAME }}

  smoke_prod:
    name: Smoke Test Prod
    runs-on: ubuntu-latest
    needs: deploy_to_prod
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/smoke-test
        with: 
          application_url: ${{ needs.deploy_to_prod.outputs.app_url }}

  rollback_prod:
    name: Rollback Prod
    runs-on: ubuntu-latest
    needs: smoke_prod
    if: ${{ always() && contains(needs.*.result, 'failure') }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/k8s-undo-deployment
        with: 
          service_account: ${{ env.PIPELINE_SA }}
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          gcp_project_id: ${{ env.GCP_PROJECT_ID }}
          gcp_region: ${{ env.GCP_REGION }}
          cluster_name: ${{ env.K8S_CLUSTER }}
          cluster_namespace: production
          deployment_name: ${{ env.K8S_DEPLOYMENT_NAME }}
