name: Demo CI/CD Pipeline

on:
  push:
    branches:
      - main
    pull_request:
      types:
        - opened
        - synchronize
        - reopened

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'zulu'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Grant execute permission to gradlew
        run: chmod +x gradlew

      - name: Build & Test with Gradle
        run: |
          ls -al
          ./gradlew build
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: jar
          path: build/libs/demo-0.0.1-SNAPSHOT.jar

  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    needs:
      - build

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: jar
          path: build/libs/demo-0.0.1-SNAPSHOT.jar

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.organization=briananderson1222
            -Dsonar.projectKey=briananderson1222_demo-app
            -Dsonar.verbose=true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  publish:
    name: Publish Artifact
    runs-on: ubuntu-latest
    needs:
      - build
    if: github.event_name != 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: jar
          path: build/libs/demo-0.0.1-SNAPSHOT.jar

      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Configure Docker CLI
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev


      - name: Build and push Docker image to Artifact Registry
        run: |
          docker build -t us-central1-docker.pkg.dev/brian-dev-1222/container-registry/demo-app:latest .
          docker push us-central1-docker.pkg.dev/brian-dev-1222/container-registry/demo-app:latest

  deploy:
    name: Deploy to Dev
    runs-on: ubuntu-latest
    needs:
      - publish
    if: github.event_name != 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Authenticate to Dev Cluster
        run: |
          gcloud container clusters get-credentials autopilot-cluster-1 --region us-central1 --project brian-dev-1222

      - name: K8s Deploy
        run: |
          kubectl apply -f deployment.yaml